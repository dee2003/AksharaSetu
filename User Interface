import tkinter as tk
from tkinter import filedialog, messagebox
from PIL import Image, ImageTk
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np

# Load the trained model
model = load_model('tulu_character_recognition_model2.h5')
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Define image dimensions for preprocessing
img_height, img_width = 150, 150  # Example values; adjust according to your model requirements

# Define a dictionary mapping class indices to Kannada folder names
# Replace with your actual mapping based on your project
class_indices = train_generator.class_indices  # Assuming train_generator is available
index_to_class = {v: k for k, v in class_indices.items()}

# Function to load and preprocess an image
def load_and_preprocess_image(img_path, img_height, img_width):
    img = image.load_img(img_path, target_size=(img_height, img_width))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array /= 255.0
    return img_array

# Function to handle image selection and prediction
def predict_image():
    file_path = filedialog.askopenfilename()
    if file_path:
        try:
            img_array = load_and_preprocess_image(file_path, img_height, img_width)
            predictions = model.predict(img_array)
            predicted_class = np.argmax(predictions)
            predicted_folder = index_to_class.get(predicted_class, "Unknown")
            result_label.config(text=f"The Kannada character: {predicted_folder}")
            
            # Display the selected image
            img = Image.open(file_path)
            img = img.resize((250, 250))  # Resize for display
            img = ImageTk.PhotoImage(img)
            image_label.config(image=img)
            image_label.image = img  # Keep a reference to avoid garbage collection
        except Exception as e:
            messagebox.showerror("Error", f"Error predicting image: {e}")

# Initialize the GUI
root = tk.Tk()
root.title("Tulu Handwritten Character Translator")

# Styling
root.geometry("500x600")  # Set initial window size
root.configure(bg="#f0f0f0")  # Light gray background

# GUI Elements

title_label = tk.Label(root, text="Characters in Translation: Decrypting Tulu to Kannada", 
                       font=("Helvetica", 18, "bold"), bg="#008080", fg="white", pady=10)  # Teal background
title_label.pack(pady=20, fill=tk.X)

image_label = tk.Label(root, padx=10, pady=10, bg="#f0f0f0")  # Light gray background
image_label.pack(pady=20)

btn_select_image = tk.Button(root, text="Select Image", command=predict_image, padx=15, pady=5, bd=3, 
                             relief=tk.RAISED, bg="#ff6347", fg="white", font=("Arial", 14, "bold"))  # Coral background
btn_select_image.pack(pady=20)

result_label = tk.Label(root, text="", font=("Bernard MT Condensed", 18, "bold"), bg="#f0f0f0", fg="#008080")  # Teal text
result_label.pack(pady=10)

# Run the main loop
root.mainloop()
